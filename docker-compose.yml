version: '3.9'

services:

  #memcached

  memcached:
    restart: always

    container_name: "memcached"

    image: memcached

    networks:
      - host

  #redis

  redis:
    image: redis:latest

    container_name: "redis"

    restart: always

    hostname: redis

    command: redis-server --port 6379 --requirepass password

    ports:
      - "6379:6379"

    networks:
      - host

  #postgres

  postgres:
    image: postgres:latest

    container_name: "postgres"

    restart: always

    command: -p 5431

    ports:
      - "5431:5431"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

    volumes:
      - go-app:/migrage/database
    networks:
      - host

  #migrate

  migrate:
    image: migrate/migrate

    container_name: "migrate"

    restart: always

    depends_on:
      - postgres

    volumes:
      - ./migrate:/database

    command:
      [
        "-database",
        "postgres://server:password@postgres:5431/postgres?sslmode=disable",
        "-path",
        "/database",
        "up"
      ]

    networks:
      - host

  #social-network

  server:
    restart: always

    build: .

    container_name: 'social-network'

    ports:
      - "3000:3000"

    depends_on:
      - postgres
      - redis
      - memcached
      - migrate

    environment:
      ARGS: -env

      #Postgres
      POSTGRES_PORT: ${DB_PORT}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

      POSTGRES_DB: ${DB_NAME}
      POSTGRES_HOST: ${DB_HOST}

      #Redis 
      REDIS_HOST: ${REDIS_DSN}
      REDIS_PASS: ${REDIS_PASSWORD}

      #Memcached

      MEMCACHED_HOST: ${MEMCACHED_DSN}

volumes:
  go-app:


networks:
  host:
    driver: bridge
